<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="106" passed="106" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-06-07T14:59:00Z" name="All Test Suite" finished-at="2024-06-07T14:59:02Z" duration-ms="1905">
    <groups>
    </groups>
    <test started-at="2024-06-07T14:59:00Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/TermTest.java" finished-at="2024-06-07T14:59:00Z" duration-ms="89">
      <class name="hust.cs.javacourse.search.index.TermTest">
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractTerm;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@43bd930a]" started-at="2024-06-07T14:59:00Z" name="testTestEquals" data-provider="testTerm" finished-at="2024-06-07T14:59:00Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTerm;@ec756bd]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractTerm;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@43bd930a]" started-at="2024-06-07T14:59:00Z" name="testTestEquals" data-provider="testTerm" finished-at="2024-06-07T14:59:00Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTerm;@3c72f59f]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestToString(hust.cs.javacourse.search.index.AbstractTerm, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@43bd930a]" started-at="2024-06-07T14:59:00Z" name="testTestToString" data-provider="testTerm" finished-at="2024-06-07T14:59:00Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[We have a dream.]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[We have a dream.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
        <test-method signature="testGetContent(hust.cs.javacourse.search.index.AbstractTerm, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@43bd930a]" started-at="2024-06-07T14:59:00Z" name="testGetContent" data-provider="testTerm" finished-at="2024-06-07T14:59:00Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[We have a dream.]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[We have a dream.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetContent -->
        <test-method signature="testSetContent(hust.cs.javacourse.search.index.AbstractTerm, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@43bd930a]" started-at="2024-06-07T14:59:00Z" name="testSetContent" data-provider="testTerm" finished-at="2024-06-07T14:59:00Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[We have no dream.]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[We have no dream.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetContent -->
        <test-method signature="testCompareTo([Lhust.cs.javacourse.search.index.AbstractTerm;, int)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@43bd930a]" started-at="2024-06-07T14:59:00Z" name="testCompareTo" data-provider="testTerm" finished-at="2024-06-07T14:59:00Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTerm;@233fe9b6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCompareTo -->
        <test-method signature="testCompareTo([Lhust.cs.javacourse.search.index.AbstractTerm;, int)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@43bd930a]" started-at="2024-06-07T14:59:00Z" name="testCompareTo" data-provider="testTerm" finished-at="2024-06-07T14:59:00Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTerm;@358ee631]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCompareTo -->
        <test-method signature="testWriteObject(hust.cs.javacourse.search.index.AbstractTerm, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@43bd930a]" started-at="2024-06-07T14:59:00Z" name="testWriteObject" data-provider="testTerm" finished-at="2024-06-07T14:59:00Z" duration-ms="33" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[search engine]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[/C:/Users/yjj/Desktop/Experiment1Test(JDK17)/Experiment1Test(JDK17)/test/config/..//ser/Term.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWriteObject -->
        <test-method signature="testReadObject(hust.cs.javacourse.search.index.AbstractTerm, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@43bd930a]" started-at="2024-06-07T14:59:00Z" name="testReadObject" data-provider="testTerm" finished-at="2024-06-07T14:59:00Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[search engine]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[/C:/Users/yjj/Desktop/Experiment1Test(JDK17)/Experiment1Test(JDK17)/test/config/..//ser/Term.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadObject -->
      </class> <!-- hust.cs.javacourse.search.index.TermTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/TermTest.java -->
    <test started-at="2024-06-07T14:59:00Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/TermTupleTest.java" finished-at="2024-06-07T14:59:00Z" duration-ms="10">
      <class name="hust.cs.javacourse.search.index.TermTupleTest">
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractTermTuple;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.TermTupleTest@704d6e83]" started-at="2024-06-07T14:59:00Z" name="testTestEquals" data-provider="testTermTuple" finished-at="2024-06-07T14:59:00Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTermTuple;@1ed1993a]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractTermTuple;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.TermTupleTest@704d6e83]" started-at="2024-06-07T14:59:00Z" name="testTestEquals" data-provider="testTermTuple" finished-at="2024-06-07T14:59:00Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTermTuple;@1f3f4916]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractTermTuple;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.TermTupleTest@704d6e83]" started-at="2024-06-07T14:59:00Z" name="testTestEquals" data-provider="testTermTuple" finished-at="2024-06-07T14:59:00Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTermTuple;@794cb805]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestToString(hust.cs.javacourse.search.index.AbstractTermTuple, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.index.TermTupleTest@704d6e83]" started-at="2024-06-07T14:59:00Z" name="testTestToString" data-provider="testTermTuple" finished-at="2024-06-07T14:59:00Z" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[<"Search", 1, 100>]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@4b5a5ed1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
      </class> <!-- hust.cs.javacourse.search.index.TermTupleTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/TermTupleTest.java -->
    <test started-at="2024-06-07T14:59:00Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/PostingTest.java" finished-at="2024-06-07T14:59:00Z" duration-ms="26">
      <class name="hust.cs.javacourse.search.index.PostingTest">
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractPosting;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@78186a70]" started-at="2024-06-07T14:59:00Z" name="testTestEquals" data-provider="testPosting" finished-at="2024-06-07T14:59:00Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@48e4374]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractPosting;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@78186a70]" started-at="2024-06-07T14:59:00Z" name="testTestEquals" data-provider="testPosting" finished-at="2024-06-07T14:59:00Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@4a22f9e2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractPosting;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@78186a70]" started-at="2024-06-07T14:59:00Z" name="testTestEquals" data-provider="testPosting" finished-at="2024-06-07T14:59:00Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@3d680b5a]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractPosting;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@78186a70]" started-at="2024-06-07T14:59:00Z" name="testTestEquals" data-provider="testPosting" finished-at="2024-06-07T14:59:00Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@4b5d6a01]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractPosting;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@78186a70]" started-at="2024-06-07T14:59:00Z" name="testTestEquals" data-provider="testPosting" finished-at="2024-06-07T14:59:00Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@3c419631]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestToString(hust.cs.javacourse.search.index.AbstractPosting, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@78186a70]" started-at="2024-06-07T14:59:00Z" name="testTestToString" data-provider="testPosting" finished-at="2024-06-07T14:59:00Z" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{docId: 1, freq: 4, positions: [10, 100, 320, 400]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@418e7838]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
        <test-method signature="testSetDocId(hust.cs.javacourse.search.index.AbstractPosting, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@78186a70]" started-at="2024-06-07T14:59:00Z" name="testSetDocId" data-provider="testPosting" finished-at="2024-06-07T14:59:00Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{docId: 20, freq: 0, positions: []}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetDocId -->
        <test-method signature="testGetDocId(hust.cs.javacourse.search.index.AbstractPosting, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@78186a70]" started-at="2024-06-07T14:59:00Z" name="testGetDocId" data-provider="testPosting" finished-at="2024-06-07T14:59:00Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{docId: 1, freq: 4, positions: [10, 100, 320, 400]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocId -->
        <test-method signature="testGetFreq(hust.cs.javacourse.search.index.AbstractPosting, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@78186a70]" started-at="2024-06-07T14:59:00Z" name="testGetFreq" data-provider="testPosting" finished-at="2024-06-07T14:59:00Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{docId: 1, freq: 4, positions: [10, 100, 320, 400]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFreq -->
        <test-method signature="testSetFreq(hust.cs.javacourse.search.index.AbstractPosting, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@78186a70]" started-at="2024-06-07T14:59:00Z" name="testSetFreq" data-provider="testPosting" finished-at="2024-06-07T14:59:00Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{docId: 0, freq: 8, positions: []}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetFreq -->
        <test-method signature="testGetPositions(hust.cs.javacourse.search.index.AbstractPosting, java.util.List)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@78186a70]" started-at="2024-06-07T14:59:00Z" name="testGetPositions" data-provider="testPosting" finished-at="2024-06-07T14:59:00Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{docId: 1, freq: 4, positions: [10, 100, 320, 400]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[10, 100, 320, 400]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetPositions -->
        <test-method signature="testCompareTo([Lhust.cs.javacourse.search.index.AbstractPosting;, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@78186a70]" started-at="2024-06-07T14:59:00Z" name="testCompareTo" data-provider="testPosting" finished-at="2024-06-07T14:59:00Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@49d904ec]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCompareTo -->
        <test-method signature="testSort(hust.cs.javacourse.search.index.AbstractPosting, java.util.List)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@78186a70]" started-at="2024-06-07T14:59:00Z" name="testSort" data-provider="testPosting" finished-at="2024-06-07T14:59:00Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{docId: 1, freq: 4, positions: [10, 100, 320, 400]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[10, 100, 320, 400]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSort -->
        <test-method signature="testSetPositions(hust.cs.javacourse.search.index.AbstractPosting, java.util.List)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@78186a70]" started-at="2024-06-07T14:59:00Z" name="testSetPositions" data-provider="testPosting" finished-at="2024-06-07T14:59:00Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{docId: 0, freq: 0, positions: [100, 320, 400]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[100, 320, 400]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetPositions -->
        <test-method signature="testWriteObject(hust.cs.javacourse.search.index.AbstractPosting, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@78186a70]" started-at="2024-06-07T14:59:00Z" name="testWriteObject" data-provider="testPosting" finished-at="2024-06-07T14:59:00Z" duration-ms="9" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{docId: 1, freq: 4, positions: [10, 100, 320, 400]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[/C:/Users/yjj/Desktop/Experiment1Test(JDK17)/Experiment1Test(JDK17)/test/config/..//ser/Posting.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWriteObject -->
        <test-method signature="testReadObject(hust.cs.javacourse.search.index.AbstractPosting, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@78186a70]" started-at="2024-06-07T14:59:00Z" name="testReadObject" data-provider="testPosting" finished-at="2024-06-07T14:59:00Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{docId: 1, freq: 4, positions: [10, 100, 320, 400]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[/C:/Users/yjj/Desktop/Experiment1Test(JDK17)/Experiment1Test(JDK17)/test/config/..//ser/Posting.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadObject -->
      </class> <!-- hust.cs.javacourse.search.index.PostingTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/PostingTest.java -->
    <test started-at="2024-06-07T14:59:00Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/PostingListTest.java" finished-at="2024-06-07T14:59:01Z" duration-ms="35">
      <class name="hust.cs.javacourse.search.index.PostingListTest">
        <test-method signature="testAdd(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@4fcd19b3]" started-at="2024-06-07T14:59:00Z" name="testAdd" data-provider="testPostingList" finished-at="2024-06-07T14:59:00Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{docId: 1, freq: 4, positions: [1, 2, 3, 4]} {docId: 2, freq: 2, positions: [5, 6]} ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@5e82df6a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method signature="testTestToString(hust.cs.javacourse.search.index.AbstractPostingList, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@4fcd19b3]" started-at="2024-06-07T14:59:00Z" name="testTestToString" data-provider="testPostingList" finished-at="2024-06-07T14:59:00Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{docId: 1, freq: 4, positions: [1, 2, 3, 4]} {docId: 2, freq: 2, positions: [5, 6]} ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@1725dc0f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
        <test-method signature="testIndexOf(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@4fcd19b3]" started-at="2024-06-07T14:59:00Z" name="testIndexOf" data-provider="testPostingList" finished-at="2024-06-07T14:59:00Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{docId: 1, freq: 4, positions: [1, 2, 3, 4]} {docId: 2, freq: 2, positions: [5, 6]} ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@50a638b5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf -->
        <test-method signature="testGet(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@4fcd19b3]" started-at="2024-06-07T14:59:00Z" name="testGet" data-provider="testPostingList" finished-at="2024-06-07T14:59:00Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{docId: 1, freq: 4, positions: [1, 2, 3, 4]} {docId: 2, freq: 2, positions: [5, 6]} ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@636be97c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet -->
        <test-method signature="testTestAdd(hust.cs.javacourse.search.index.AbstractPostingList, java.util.List)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@4fcd19b3]" started-at="2024-06-07T14:59:00Z" name="testTestAdd" data-provider="testPostingList" finished-at="2024-06-07T14:59:00Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{docId: 1, freq: 4, positions: [1, 2, 3, 4]} {docId: 2, freq: 2, positions: [5, 6]} ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[{docId: 1, freq: 4, positions: [1, 2, 3, 4]}, {docId: 1, freq: 4, positions: [2, 4, 3, 1]}, {docId: 2, freq: 2, positions: [5, 6]}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestAdd -->
        <test-method signature="testTestIndexOf(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@4fcd19b3]" started-at="2024-06-07T14:59:00Z" name="testTestIndexOf" data-provider="testPostingList" finished-at="2024-06-07T14:59:00Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{docId: 1, freq: 4, positions: [1, 2, 3, 4]} {docId: 2, freq: 2, positions: [5, 6]} ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@50b472aa]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestIndexOf -->
        <test-method signature="testSize(hust.cs.javacourse.search.index.AbstractPostingList, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@4fcd19b3]" started-at="2024-06-07T14:59:00Z" name="testSize" data-provider="testPostingList" finished-at="2024-06-07T14:59:00Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{docId: 1, freq: 4, positions: [1, 2, 3, 4]} {docId: 2, freq: 2, positions: [5, 6]} ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method signature="testRemove(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@4fcd19b3]" started-at="2024-06-07T14:59:00Z" name="testRemove" data-provider="testPostingList" finished-at="2024-06-07T14:59:00Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@1817d444]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove -->
        <test-method signature="testSize(hust.cs.javacourse.search.index.AbstractPostingList, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@4fcd19b3]" started-at="2024-06-07T14:59:00Z" name="testSize" data-provider="testPostingList" finished-at="2024-06-07T14:59:00Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method signature="testClear(hust.cs.javacourse.search.index.AbstractPostingList, java.lang.Object)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@4fcd19b3]" started-at="2024-06-07T14:59:00Z" name="testClear" data-provider="testPostingList" finished-at="2024-06-07T14:59:00Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method signature="testTestRemove(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@4fcd19b3]" started-at="2024-06-07T14:59:00Z" name="testTestRemove" data-provider="testPostingList" finished-at="2024-06-07T14:59:00Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@31368b99]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestRemove -->
        <test-method signature="testContains(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@4fcd19b3]" started-at="2024-06-07T14:59:00Z" name="testContains" data-provider="testPostingList" finished-at="2024-06-07T14:59:00Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{docId: 1, freq: 4, positions: [1, 2, 3, 4]} ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@3f197a46]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains -->
        <test-method signature="testIsEmpty(hust.cs.javacourse.search.index.AbstractPostingList, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@4fcd19b3]" started-at="2024-06-07T14:59:00Z" name="testIsEmpty" data-provider="testPostingList" finished-at="2024-06-07T14:59:00Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method signature="testIsEmpty(hust.cs.javacourse.search.index.AbstractPostingList, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@4fcd19b3]" started-at="2024-06-07T14:59:00Z" name="testIsEmpty" data-provider="testPostingList" finished-at="2024-06-07T14:59:00Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{docId: 1, freq: 4, positions: [1, 2, 3, 4]} {docId: 2, freq: 2, positions: [5, 6]} ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method signature="testSort(hust.cs.javacourse.search.index.AbstractPostingList, [Ljava.lang.Integer;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@4fcd19b3]" started-at="2024-06-07T14:59:00Z" name="testSort" data-provider="testPostingList" finished-at="2024-06-07T14:59:00Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{docId: 2, freq: 4, positions: [5, 9, 7, 8]} {docId: 3, freq: 2, positions: [10, 11]} {docId: 4, freq: 4, positions: [1, 4, 3, 2]} ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Integer;@6ca8564a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSort -->
        <test-method signature="testWriteObject(hust.cs.javacourse.search.index.AbstractPostingList, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@4fcd19b3]" started-at="2024-06-07T14:59:00Z" name="testWriteObject" data-provider="testPostingList" finished-at="2024-06-07T14:59:00Z" duration-ms="17" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{docId: 1, freq: 4, positions: [1, 2, 3, 4]} {docId: 2, freq: 2, positions: [5, 6]} ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[/C:/Users/yjj/Desktop/Experiment1Test(JDK17)/Experiment1Test(JDK17)/test/config/..//ser/PostingList.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWriteObject -->
        <test-method signature="testReadObject(hust.cs.javacourse.search.index.AbstractPostingList, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@4fcd19b3]" started-at="2024-06-07T14:59:00Z" name="testReadObject" data-provider="testPostingList" finished-at="2024-06-07T14:59:01Z" duration-ms="11" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{docId: 1, freq: 4, positions: [1, 2, 3, 4]} {docId: 2, freq: 2, positions: [5, 6]} ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[/C:/Users/yjj/Desktop/Experiment1Test(JDK17)/Experiment1Test(JDK17)/test/config/..//ser/PostingList.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadObject -->
      </class> <!-- hust.cs.javacourse.search.index.PostingListTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/PostingListTest.java -->
    <test started-at="2024-06-07T14:59:01Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/DocumentTest.java" finished-at="2024-06-07T14:59:01Z" duration-ms="9">
      <class name="hust.cs.javacourse.search.index.DocumentTest">
        <test-method signature="testGetDocId(hust.cs.javacourse.search.index.AbstractDocument, int)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@24b1d79b]" started-at="2024-06-07T14:59:01Z" name="testGetDocId" data-provider="testDocument" finished-at="2024-06-07T14:59:01Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId: 1
docPath: C:/1.txt
tuples:
<"aaa", 1, 17>
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocId -->
        <test-method signature="testGetTupleSize(hust.cs.javacourse.search.index.AbstractDocument, int)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@24b1d79b]" started-at="2024-06-07T14:59:01Z" name="testGetTupleSize" data-provider="testDocument" finished-at="2024-06-07T14:59:01Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId: 1
docPath: C:/1.txt
tuples:
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTupleSize -->
        <test-method signature="testSetDocId(hust.cs.javacourse.search.index.AbstractDocument, int)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@24b1d79b]" started-at="2024-06-07T14:59:01Z" name="testSetDocId" data-provider="testDocument" finished-at="2024-06-07T14:59:01Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId: 2
docPath: unknown
tuples:
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetDocId -->
        <test-method signature="testGetTuples(hust.cs.javacourse.search.index.AbstractDocument, java.util.List)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@24b1d79b]" started-at="2024-06-07T14:59:01Z" name="testGetTuples" data-provider="testDocument" finished-at="2024-06-07T14:59:01Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId: 1
docPath: C:/1.txt
tuples:
<"aaa", 1, 17>
<"bbb", 1, 30>
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[<"aaa", 1, 17>, <"bbb", 1, 30>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTuples -->
        <test-method signature="testGetDocPath(hust.cs.javacourse.search.index.AbstractDocument, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@24b1d79b]" started-at="2024-06-07T14:59:01Z" name="testGetDocPath" data-provider="testDocument" finished-at="2024-06-07T14:59:01Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId: 1
docPath: C:/1.txt
tuples:
<"aaa", 1, 17>
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[C:/1.txt]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocPath -->
        <test-method signature="testContains(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractTermTuple)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@24b1d79b]" started-at="2024-06-07T14:59:01Z" name="testContains" data-provider="testDocument" finished-at="2024-06-07T14:59:01Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId: 1
docPath: C:/1.txt
tuples:
<"aaa", 1, 17>
<"bbb", 1, 30>
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[<"bbb", 1, 30>]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains -->
        <test-method signature="testGetTuple(hust.cs.javacourse.search.index.AbstractDocument, java.util.List)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@24b1d79b]" started-at="2024-06-07T14:59:01Z" name="testGetTuple" data-provider="testDocument" finished-at="2024-06-07T14:59:01Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId: 1
docPath: C:/1.txt
tuples:
<"aaa", 1, 17>
<"bbb", 1, 30>
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[<"aaa", 1, 17>, <"bbb", 1, 30>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTuple -->
        <test-method signature="testAddTuple(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractTermTuple)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@24b1d79b]" started-at="2024-06-07T14:59:01Z" name="testAddTuple" data-provider="testDocument" finished-at="2024-06-07T14:59:01Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId: 1
docPath: C:/1.txt
tuples:
<"aaa", 1, 17>
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[<"aaa", 1, 17>]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddTuple -->
        <test-method signature="testTestToString(hust.cs.javacourse.search.index.AbstractDocument, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@24b1d79b]" started-at="2024-06-07T14:59:01Z" name="testTestToString" data-provider="testDocument" finished-at="2024-06-07T14:59:01Z" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId: 1
docPath: C:/1.txt
tuples:
<"aaa", 1, 17>
<"bbb", 1, 30>
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@647e447]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
        <test-method signature="testSetDocPath(hust.cs.javacourse.search.index.AbstractDocument, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@24b1d79b]" started-at="2024-06-07T14:59:01Z" name="testSetDocPath" data-provider="testDocument" finished-at="2024-06-07T14:59:01Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId: -1
docPath: C:/2.txt
tuples:
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[C:/2.txt]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetDocPath -->
        <test-method signature="testContains(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractTermTuple)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@24b1d79b]" started-at="2024-06-07T14:59:01Z" name="testContains" data-provider="testDocument" finished-at="2024-06-07T14:59:01Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId: 1
docPath: C:/1.txt
tuples:
<"aaa", 1, 17>
<"bbb", 1, 30>
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[<"aaa", 1, 17>]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains -->
        <test-method signature="testGetTupleSize(hust.cs.javacourse.search.index.AbstractDocument, int)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@24b1d79b]" started-at="2024-06-07T14:59:01Z" name="testGetTupleSize" data-provider="testDocument" finished-at="2024-06-07T14:59:01Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId: 1
docPath: C:/1.txt
tuples:
<"aaa", 1, 17>
<"bbb", 1, 30>
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTupleSize -->
      </class> <!-- hust.cs.javacourse.search.index.DocumentTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/DocumentTest.java -->
    <test started-at="2024-06-07T14:59:01Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/TermTupleScannerTest.java" finished-at="2024-06-07T14:59:01Z" duration-ms="46">
      <class name="hust.cs.javacourse.search.parse.TermTupleScannerTest">
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.TermTupleScannerTest@6d3af739]" started-at="2024-06-07T14:59:01Z" name="testNext" data-provider="testTermTupleScanner" finished-at="2024-06-07T14:59:01Z" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.TermTupleScanner@2ef3eef9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[<"aaa", 1, 0>, <"bbb", 1, 1>, <"ccc", 1, 2>, <"ddd", 1, 3>, <"is", 1, 4>, <"f17", 1, 5>, <"2020", 1, 6>, <"ab", 1, 7>, <"ababababababababababab", 1, 8>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.TermTupleScannerTest@6d3af739]" started-at="2024-06-07T14:59:01Z" name="testNext" data-provider="testTermTupleScanner" finished-at="2024-06-07T14:59:01Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.TermTupleScanner@243c4f91]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[<"activity", 1, 0>, <"destination", 1, 1>, <"emergency", 1, 2>, <"26%", 1, 3>, <"u571", 1, 4>, <"because", 1, 5>, <"hence", 1, 6>, <"capital", 1, 7>, <"i", 1, 8>, <"frozen", 1, 9>, <"benefits", 1, 10>, <"google", 1, 11>, <"hahahahahahahahahahahahah", 1, 12>, <"ha", 1, 13>, <"frozen", 1, 14>, <"google", 1, 15>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
      </class> <!-- hust.cs.javacourse.search.parse.TermTupleScannerTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/TermTupleScannerTest.java -->
    <test started-at="2024-06-07T14:59:01Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/StopWordTermTupleFilterTest.java" finished-at="2024-06-07T14:59:01Z" duration-ms="30">
      <class name="hust.cs.javacourse.search.parse.StopWordTermTupleFilterTest">
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.StopWordTermTupleFilterTest@15b3e5b]" started-at="2024-06-07T14:59:01Z" name="testNext" data-provider="testStopWordTermTupleFilter" finished-at="2024-06-07T14:59:01Z" duration-ms="9" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.StopWordTermTupleFilter@20deea7f]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[<"aaa", 1, 0>, <"bbb", 1, 1>, <"ccc", 1, 2>, <"ddd", 1, 3>, <"f17", 1, 4>, <"2020", 1, 5>, <"ab", 1, 6>, <"ababababababababababab", 1, 7>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.StopWordTermTupleFilterTest@15b3e5b]" started-at="2024-06-07T14:59:01Z" name="testNext" data-provider="testStopWordTermTupleFilter" finished-at="2024-06-07T14:59:01Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.StopWordTermTupleFilter@3835c46]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[<"aaa", 1, 0>, <"bbb", 1, 1>, <"ccc", 1, 3>, <"ddd", 1, 4>, <"f17", 1, 6>, <"2020", 1, 7>, <"ab", 1, 8>, <"ababababababababababab", 1, 10>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.StopWordTermTupleFilterTest@15b3e5b]" started-at="2024-06-07T14:59:01Z" name="testNext" data-provider="testStopWordTermTupleFilter" finished-at="2024-06-07T14:59:01Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.StopWordTermTupleFilter@1dde4cb2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[<"activity", 1, 0>, <"destination", 1, 1>, <"emergency", 1, 2>, <"26%", 1, 3>, <"u571", 1, 4>, <"capital", 1, 7>, <"frozen", 1, 9>, <"benefits", 1, 10>, <"google", 1, 11>, <"hahahahahahahahahahahahah", 1, 12>, <"ha", 1, 13>, <"frozen", 1, 14>, <"google", 1, 15>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
      </class> <!-- hust.cs.javacourse.search.parse.StopWordTermTupleFilterTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/StopWordTermTupleFilterTest.java -->
    <test started-at="2024-06-07T14:59:01Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/PatternTermTupleFilterTest.java" finished-at="2024-06-07T14:59:01Z" duration-ms="9">
      <class name="hust.cs.javacourse.search.parse.PatternTermTupleFilterTest">
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.PatternTermTupleFilterTest@7dc222ae]" started-at="2024-06-07T14:59:01Z" name="testNext" data-provider="testPatternTermTupleFilter" finished-at="2024-06-07T14:59:01Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.PatternTermTupleFilter@55b7a4e0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[<"aaa", 1, 0>, <"bbb", 1, 2>, <"ab", 1, 3>, <"ccc", 1, 4>, <"ddd", 1, 5>, <"ababababababababababab", 1, 7>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.PatternTermTupleFilterTest@7dc222ae]" started-at="2024-06-07T14:59:01Z" name="testNext" data-provider="testPatternTermTupleFilter" finished-at="2024-06-07T14:59:01Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.PatternTermTupleFilter@5f058f00]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[<"activity", 1, 0>, <"destination", 1, 1>, <"emergency", 1, 2>, <"because", 1, 5>, <"hence", 1, 6>, <"capital", 1, 7>, <"i", 1, 8>, <"frozen", 1, 9>, <"benefits", 1, 10>, <"google", 1, 11>, <"hahahahahahahahahahahahah", 1, 12>, <"ha", 1, 13>, <"frozen", 1, 14>, <"google", 1, 15>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
      </class> <!-- hust.cs.javacourse.search.parse.PatternTermTupleFilterTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/PatternTermTupleFilterTest.java -->
    <test started-at="2024-06-07T14:59:01Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/LengthTermTupleFilterTest.java" finished-at="2024-06-07T14:59:01Z" duration-ms="7">
      <class name="hust.cs.javacourse.search.parse.LengthTermTupleFilterTest">
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.LengthTermTupleFilterTest@80169cf]" started-at="2024-06-07T14:59:01Z" name="testNext" data-provider="testLengthTermTupleFilter" finished-at="2024-06-07T14:59:01Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.LengthTermTupleFilter@43195e57]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[<"aaa", 1, 0>, <"bbb", 1, 1>, <"ccc", 1, 3>, <"ddd", 1, 4>, <"f17", 1, 5>, <"2020", 1, 6>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.LengthTermTupleFilterTest@80169cf]" started-at="2024-06-07T14:59:01Z" name="testNext" data-provider="testLengthTermTupleFilter" finished-at="2024-06-07T14:59:01Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.LengthTermTupleFilter@333291e3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[<"activity", 1, 0>, <"destination", 1, 1>, <"emergency", 1, 2>, <"26%", 1, 3>, <"u571", 1, 4>, <"because", 1, 5>, <"hence", 1, 6>, <"capital", 1, 7>, <"frozen", 1, 9>, <"benefits", 1, 10>, <"google", 1, 11>, <"frozen", 1, 14>, <"google", 1, 15>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
      </class> <!-- hust.cs.javacourse.search.parse.LengthTermTupleFilterTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/LengthTermTupleFilterTest.java -->
    <test started-at="2024-06-07T14:59:01Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/ScannerFilterAllInOneTest.java" finished-at="2024-06-07T14:59:01Z" duration-ms="3">
      <class name="hust.cs.javacourse.search.parse.ScannerFilterAllInOneTest">
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.ScannerFilterAllInOneTest@2698dc7]" started-at="2024-06-07T14:59:01Z" name="testNext" data-provider="testScannerFilterAllInOne" finished-at="2024-06-07T14:59:01Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.PatternTermTupleFilter@795cd85e]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[<"aaa", 1, 1>, <"bbb", 1, 2>, <"ccc", 1, 4>, <"ddd", 1, 6>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.ScannerFilterAllInOneTest@2698dc7]" started-at="2024-06-07T14:59:01Z" name="testNext" data-provider="testScannerFilterAllInOne" finished-at="2024-06-07T14:59:01Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.PatternTermTupleFilter@59fd97a8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[<"activity", 1, 0>, <"destination", 1, 1>, <"emergency", 1, 2>, <"capital", 1, 7>, <"frozen", 1, 9>, <"benefits", 1, 10>, <"google", 1, 11>, <"frozen", 1, 14>, <"google", 1, 15>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
      </class> <!-- hust.cs.javacourse.search.parse.ScannerFilterAllInOneTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/ScannerFilterAllInOneTest.java -->
    <test started-at="2024-06-07T14:59:01Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/DocumentBuilderTest.java" finished-at="2024-06-07T14:59:01Z" duration-ms="737">
      <class name="hust.cs.javacourse.search.index.DocumentBuilderTest">
        <test-method signature="testBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@4b9e255]" started-at="2024-06-07T14:59:01Z" name="testBuild" data-provider="testDocumentBuilder" finished-at="2024-06-07T14:59:01Z" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId: 0
docPath: /C:/Users/yjj/Desktop/Experiment1Test(JDK17)/Experiment1Test(JDK17)/test/config/..//text/2.txt
tuples:
<"activity", 1, 0>
<"destination", 1, 1>
<"emergency", 1, 2>
<"26%", 1, 3>
<"u571", 1, 4>
<"because", 1, 5>
<"hence", 1, 6>
<"capital", 1, 7>
<"i", 1, 8>
<"frozen", 1, 9>
<"benefits", 1, 10>
<"google", 1, 11>
<"hahahahahahahahahahahahah", 1, 12>
<"ha", 1, 13>
<"frozen", 1, 14>
<"google", 1, 15>
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[docId: 0
docPath: D:\IdeaWorkspace\SeachEngine/text/2.txt
tuples:
<"activity", 1, 0>
<"destination", 1, 1>
<"emergency", 1, 2>
<"26%", 1, 3>
<"u571", 1, 4>
<"because", 1, 5>
<"hence", 1, 6>
<"capital", 1, 7>
<"i", 1, 8>
<"frozen", 1, 9>
<"benefits", 1, 10>
<"google", 1, 11>
<"hahahahahahahahahahahahah", 1, 12>
<"ha", 1, 13>
<"frozen", 1, 14>
<"google", 1, 15>
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuild -->
        <test-method signature="testBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@4b9e255]" started-at="2024-06-07T14:59:01Z" name="testBuild" data-provider="testDocumentBuilder" finished-at="2024-06-07T14:59:01Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId: 0
docPath: /C:/Users/yjj/Desktop/Experiment1Test(JDK17)/Experiment1Test(JDK17)/test/config/..//text/2.txt
tuples:
<"activity", 1, 0>
<"destination", 1, 1>
<"emergency", 1, 2>
<"26%", 1, 3>
<"u571", 1, 4>
<"capital", 1, 7>
<"frozen", 1, 9>
<"benefits", 1, 10>
<"google", 1, 11>
<"hahahahahahahahahahahahah", 1, 12>
<"ha", 1, 13>
<"frozen", 1, 14>
<"google", 1, 15>
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[docId: 0
docPath: D:\IdeaWorkspace\SeachEngine/text/2.txt
tuples:
<"activity", 1, 0>
<"destination", 1, 1>
<"emergency", 1, 2>
<"26%", 1, 3>
<"u571", 1, 4>
<"capital", 1, 7>
<"frozen", 1, 9>
<"benefits", 1, 10>
<"google", 1, 11>
<"hahahahahahahahahahahahah", 1, 12>
<"ha", 1, 13>
<"frozen", 1, 14>
<"google", 1, 15>
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuild -->
        <test-method signature="testBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@4b9e255]" started-at="2024-06-07T14:59:01Z" name="testBuild" data-provider="testDocumentBuilder" finished-at="2024-06-07T14:59:01Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId: 0
docPath: /C:/Users/yjj/Desktop/Experiment1Test(JDK17)/Experiment1Test(JDK17)/test/config/..//text/2.txt
tuples:
<"activity", 1, 0>
<"destination", 1, 1>
<"emergency", 1, 2>
<"because", 1, 5>
<"hence", 1, 6>
<"capital", 1, 7>
<"i", 1, 8>
<"frozen", 1, 9>
<"benefits", 1, 10>
<"google", 1, 11>
<"hahahahahahahahahahahahah", 1, 12>
<"ha", 1, 13>
<"frozen", 1, 14>
<"google", 1, 15>
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[docId: 0
docPath: D:\IdeaWorkspace\SeachEngine/text/2.txt
tuples:
<"activity", 1, 0>
<"destination", 1, 1>
<"emergency", 1, 2>
<"because", 1, 5>
<"hence", 1, 6>
<"capital", 1, 7>
<"i", 1, 8>
<"frozen", 1, 9>
<"benefits", 1, 10>
<"google", 1, 11>
<"hahahahahahahahahahahahah", 1, 12>
<"ha", 1, 13>
<"frozen", 1, 14>
<"google", 1, 15>
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuild -->
        <test-method signature="testBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@4b9e255]" started-at="2024-06-07T14:59:01Z" name="testBuild" data-provider="testDocumentBuilder" finished-at="2024-06-07T14:59:01Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId: 0
docPath: /C:/Users/yjj/Desktop/Experiment1Test(JDK17)/Experiment1Test(JDK17)/test/config/..//text/2.txt
tuples:
<"activity", 1, 0>
<"destination", 1, 1>
<"emergency", 1, 2>
<"capital", 1, 7>
<"frozen", 1, 9>
<"benefits", 1, 10>
<"google", 1, 11>
<"frozen", 1, 14>
<"google", 1, 15>
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[docId: 0
docPath: D:\IdeaWorkspace\SeachEngine/text/2.txt
tuples:
<"activity", 1, 0>
<"destination", 1, 1>
<"emergency", 1, 2>
<"capital", 1, 7>
<"frozen", 1, 9>
<"benefits", 1, 10>
<"google", 1, 11>
<"frozen", 1, 14>
<"google", 1, 15>
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuild -->
        <test-method signature="testBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@4b9e255]" started-at="2024-06-07T14:59:01Z" name="testBuild" data-provider="testDocumentBuilder" finished-at="2024-06-07T14:59:01Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId: 0
docPath: /C:/Users/yjj/Desktop/Experiment1Test(JDK17)/Experiment1Test(JDK17)/test/config/..//text/2.txt
tuples:
<"activity", 1, 0>
<"destination", 1, 1>
<"emergency", 1, 2>
<"26%", 1, 3>
<"u571", 1, 4>
<"because", 1, 5>
<"hence", 1, 6>
<"capital", 1, 7>
<"frozen", 1, 9>
<"benefits", 1, 10>
<"google", 1, 11>
<"frozen", 1, 14>
<"google", 1, 15>
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[docId: 0
docPath: D:\IdeaWorkspace\SeachEngine/text/2.txt
tuples:
<"activity", 1, 0>
<"destination", 1, 1>
<"emergency", 1, 2>
<"26%", 1, 3>
<"u571", 1, 4>
<"because", 1, 5>
<"hence", 1, 6>
<"capital", 1, 7>
<"frozen", 1, 9>
<"benefits", 1, 10>
<"google", 1, 11>
<"frozen", 1, 14>
<"google", 1, 15>
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuild -->
        <test-method signature="testTestBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@4b9e255]" started-at="2024-06-07T14:59:01Z" name="testTestBuild" data-provider="testDocumentBuilder" finished-at="2024-06-07T14:59:01Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId: 0
docPath: /C:/Users/yjj/Desktop/Experiment1Test(JDK17)/Experiment1Test(JDK17)/test/config/..//text/2.txt
tuples:
<"activity", 1, 0>
<"destination", 1, 1>
<"emergency", 1, 2>
<"capital", 1, 7>
<"frozen", 1, 9>
<"benefits", 1, 10>
<"google", 1, 11>
<"frozen", 1, 14>
<"google", 1, 15>
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[docId: 0
docPath: D:\IdeaWorkspace\SeachEngine/text/2.txt
tuples:
<"activity", 1, 0>
<"destination", 1, 1>
<"emergency", 1, 2>
<"capital", 1, 7>
<"frozen", 1, 9>
<"benefits", 1, 10>
<"google", 1, 11>
<"frozen", 1, 14>
<"google", 1, 15>
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestBuild -->
        <test-method signature="testTestBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@4b9e255]" started-at="2024-06-07T14:59:01Z" name="testTestBuild" data-provider="testDocumentBuilder" finished-at="2024-06-07T14:59:01Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId: 0
docPath: /C:/Users/yjj/Desktop/Experiment1Test(JDK17)/Experiment1Test(JDK17)/test/config/..//text/2.txt
tuples:
<"activity", 1, 0>
<"destination", 1, 1>
<"emergency", 1, 2>
<"capital", 1, 7>
<"frozen", 1, 9>
<"benefits", 1, 10>
<"google", 1, 11>
<"frozen", 1, 14>
<"google", 1, 15>
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[docId: 0
docPath: D:\IdeaWorkspace\SeachEngine/text/2.txt
tuples:
<"activity", 1, 0>
<"destination", 1, 1>
<"emergency", 1, 2>
<"capital", 1, 7>
<"frozen", 1, 9>
<"benefits", 1, 10>
<"google", 1, 11>
<"frozen", 1, 14>
<"google", 1, 15>
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestBuild -->
      </class> <!-- hust.cs.javacourse.search.index.DocumentBuilderTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/DocumentBuilderTest.java -->
    <test started-at="2024-06-07T14:59:01Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/IndexTest.java" finished-at="2024-06-07T14:59:02Z" duration-ms="467">
      <class name="hust.cs.javacourse.search.index.IndexTest">
        <test-method signature="testTestToString(hust.cs.javacourse.search.index.AbstractIndex, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@76b10754]" started-at="2024-06-07T14:59:02Z" name="testTestToString" data-provider="testIndex" finished-at="2024-06-07T14:59:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId----docPath mapping:
0   ---->   D:\IdeaWorkspace\SeachEngine\text\1.txt
1   ---->   D:\IdeaWorkspace\SeachEngine\text\2.txt
2   ---->   D:\IdeaWorkspace\SeachEngine\text\3.txt

Postings:
activity   ---->   {docId: 0, freq: 3, positions: [0, 1, 6]} {docId: 1, freq: 1, positions: [0]} 
benefits   ---->   {docId: 0, freq: 2, positions: [2, 7]} {docId: 1, freq: 1, positions: [10]} 
capital   ---->   {docId: 0, freq: 2, positions: [3, 8]} {docId: 1, freq: 1, positions: [7]} 
destination   ---->   {docId: 0, freq: 2, positions: [4, 9]} {docId: 1, freq: 1, positions: [1]} 
emergency   ---->   {docId: 0, freq: 1, positions: [10]} {docId: 1, freq: 1, positions: [2]} 
fizzy   ---->   {docId: 0, freq: 1, positions: [5]} 
frozen   ---->   {docId: 1, freq: 2, positions: [9, 14]} 
google   ---->   {docId: 1, freq: 2, positions: [11, 15]} 
marketplace   ---->   {docId: 2, freq: 1, positions: [0]} 
medical   ---->   {docId: 2, freq: 1, positions: [1]} 
notification   ---->   {docId: 2, freq: 1, positions: [3]} 
peninsula   ---->   {docId: 2, freq: 1, positions: [5]} 
pollution   ---->   {docId: 2, freq: 1, positions: [7]} 
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@30b19518]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
        <test-method signature="testAddDocument([Lhust.cs.javacourse.search.index.AbstractIndex;, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@76b10754]" started-at="2024-06-07T14:59:02Z" name="testAddDocument" data-provider="testIndex" finished-at="2024-06-07T14:59:02Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractIndex;@628c4ac0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[docId: 1
docPath: D:\IdeaWorkspace\SeachEngine/text/2.txt
tuples:
<"activity", 1, 0>
<"destination", 1, 1>
<"emergency", 1, 2>
<"capital", 1, 7>
<"frozen", 1, 9>
<"benefits", 1, 10>
<"google", 1, 11>
<"frozen", 1, 14>
<"google", 1, 15>
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddDocument -->
        <test-method signature="testLoad(hust.cs.javacourse.search.index.AbstractIndex, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@76b10754]" started-at="2024-06-07T14:59:02Z" name="testLoad" data-provider="testIndex" finished-at="2024-06-07T14:59:02Z" duration-ms="27" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId----docPath mapping:
0   ---->   D:\IdeaWorkspace\SeachEngine\text\1.txt
1   ---->   D:\IdeaWorkspace\SeachEngine\text\2.txt
2   ---->   D:\IdeaWorkspace\SeachEngine\text\3.txt

Postings:
activity   ---->   {docId: 0, freq: 3, positions: [0, 1, 6]} {docId: 1, freq: 1, positions: [0]} 
benefits   ---->   {docId: 0, freq: 2, positions: [2, 7]} {docId: 1, freq: 1, positions: [10]} 
capital   ---->   {docId: 0, freq: 2, positions: [3, 8]} {docId: 1, freq: 1, positions: [7]} 
destination   ---->   {docId: 0, freq: 2, positions: [4, 9]} {docId: 1, freq: 1, positions: [1]} 
emergency   ---->   {docId: 0, freq: 1, positions: [10]} {docId: 1, freq: 1, positions: [2]} 
fizzy   ---->   {docId: 0, freq: 1, positions: [5]} 
frozen   ---->   {docId: 1, freq: 2, positions: [9, 14]} 
google   ---->   {docId: 1, freq: 2, positions: [11, 15]} 
marketplace   ---->   {docId: 2, freq: 1, positions: [0]} 
medical   ---->   {docId: 2, freq: 1, positions: [1]} 
notification   ---->   {docId: 2, freq: 1, positions: [3]} 
peninsula   ---->   {docId: 2, freq: 1, positions: [5]} 
pollution   ---->   {docId: 2, freq: 1, positions: [7]} 
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[/C:/Users/yjj/Desktop/Experiment1Test(JDK17)/Experiment1Test(JDK17)/test/config/..//index/index_1_2_3_txt.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoad -->
        <test-method signature="testSave(hust.cs.javacourse.search.index.AbstractIndex, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@76b10754]" started-at="2024-06-07T14:59:02Z" name="testSave" data-provider="testIndex" finished-at="2024-06-07T14:59:02Z" duration-ms="9" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId----docPath mapping:
0   ---->   D:\IdeaWorkspace\SeachEngine\text\1.txt
1   ---->   D:\IdeaWorkspace\SeachEngine\text\2.txt
2   ---->   D:\IdeaWorkspace\SeachEngine\text\3.txt

Postings:
activity   ---->   {docId: 0, freq: 3, positions: [0, 1, 6]} {docId: 1, freq: 1, positions: [0]} 
benefits   ---->   {docId: 0, freq: 2, positions: [2, 7]} {docId: 1, freq: 1, positions: [10]} 
capital   ---->   {docId: 0, freq: 2, positions: [3, 8]} {docId: 1, freq: 1, positions: [7]} 
destination   ---->   {docId: 0, freq: 2, positions: [4, 9]} {docId: 1, freq: 1, positions: [1]} 
emergency   ---->   {docId: 0, freq: 1, positions: [10]} {docId: 1, freq: 1, positions: [2]} 
fizzy   ---->   {docId: 0, freq: 1, positions: [5]} 
frozen   ---->   {docId: 1, freq: 2, positions: [9, 14]} 
google   ---->   {docId: 1, freq: 2, positions: [11, 15]} 
marketplace   ---->   {docId: 2, freq: 1, positions: [0]} 
medical   ---->   {docId: 2, freq: 1, positions: [1]} 
notification   ---->   {docId: 2, freq: 1, positions: [3]} 
peninsula   ---->   {docId: 2, freq: 1, positions: [5]} 
pollution   ---->   {docId: 2, freq: 1, positions: [7]} 
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[/C:/Users/yjj/Desktop/Experiment1Test(JDK17)/Experiment1Test(JDK17)/test/config/..//index/index_1_2_3_txt.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSave -->
        <test-method signature="testSearch(hust.cs.javacourse.search.index.AbstractIndex, hust.cs.javacourse.search.index.AbstractPostingList)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@76b10754]" started-at="2024-06-07T14:59:02Z" name="testSearch" data-provider="testIndex" finished-at="2024-06-07T14:59:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId----docPath mapping:
0   ---->   D:\IdeaWorkspace\SeachEngine\text\1.txt
1   ---->   D:\IdeaWorkspace\SeachEngine\text\2.txt
2   ---->   D:\IdeaWorkspace\SeachEngine\text\3.txt

Postings:
activity   ---->   {docId: 0, freq: 3, positions: [0, 1, 6]} {docId: 1, freq: 1, positions: [0]} 
benefits   ---->   {docId: 0, freq: 2, positions: [2, 7]} {docId: 1, freq: 1, positions: [10]} 
capital   ---->   {docId: 0, freq: 2, positions: [3, 8]} {docId: 1, freq: 1, positions: [7]} 
destination   ---->   {docId: 0, freq: 2, positions: [4, 9]} {docId: 1, freq: 1, positions: [1]} 
emergency   ---->   {docId: 0, freq: 1, positions: [10]} {docId: 1, freq: 1, positions: [2]} 
fizzy   ---->   {docId: 0, freq: 1, positions: [5]} 
frozen   ---->   {docId: 1, freq: 2, positions: [9, 14]} 
google   ---->   {docId: 1, freq: 2, positions: [11, 15]} 
marketplace   ---->   {docId: 2, freq: 1, positions: [0]} 
medical   ---->   {docId: 2, freq: 1, positions: [1]} 
notification   ---->   {docId: 2, freq: 1, positions: [3]} 
peninsula   ---->   {docId: 2, freq: 1, positions: [5]} 
pollution   ---->   {docId: 2, freq: 1, positions: [7]} 
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{docId: 0, freq: 3, positions: [0, 1, 6]} {docId: 1, freq: 1, positions: [0]} ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearch -->
        <test-method signature="testGetDictionary(hust.cs.javacourse.search.index.AbstractIndex, java.util.Set)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@76b10754]" started-at="2024-06-07T14:59:02Z" name="testGetDictionary" data-provider="testIndex" finished-at="2024-06-07T14:59:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId----docPath mapping:
0   ---->   D:\IdeaWorkspace\SeachEngine\text\1.txt
1   ---->   D:\IdeaWorkspace\SeachEngine\text\2.txt
2   ---->   D:\IdeaWorkspace\SeachEngine\text\3.txt

Postings:
activity   ---->   {docId: 0, freq: 3, positions: [0, 1, 6]} {docId: 1, freq: 1, positions: [0]} 
benefits   ---->   {docId: 0, freq: 2, positions: [2, 7]} {docId: 1, freq: 1, positions: [10]} 
capital   ---->   {docId: 0, freq: 2, positions: [3, 8]} {docId: 1, freq: 1, positions: [7]} 
destination   ---->   {docId: 0, freq: 2, positions: [4, 9]} {docId: 1, freq: 1, positions: [1]} 
emergency   ---->   {docId: 0, freq: 1, positions: [10]} {docId: 1, freq: 1, positions: [2]} 
fizzy   ---->   {docId: 0, freq: 1, positions: [5]} 
frozen   ---->   {docId: 1, freq: 2, positions: [9, 14]} 
google   ---->   {docId: 1, freq: 2, positions: [11, 15]} 
marketplace   ---->   {docId: 2, freq: 1, positions: [0]} 
medical   ---->   {docId: 2, freq: 1, positions: [1]} 
notification   ---->   {docId: 2, freq: 1, positions: [3]} 
peninsula   ---->   {docId: 2, freq: 1, positions: [5]} 
pollution   ---->   {docId: 2, freq: 1, positions: [7]} 
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[activity, benefits, capital, destination, emergency, fizzy, frozen, google, marketplace, medical, notification, peninsula, pollution]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDictionary -->
        <test-method signature="testWriteObject(hust.cs.javacourse.search.index.AbstractIndex, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@76b10754]" started-at="2024-06-07T14:59:02Z" name="testWriteObject" data-provider="testIndex" finished-at="2024-06-07T14:59:02Z" duration-ms="11" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId----docPath mapping:
0   ---->   D:\IdeaWorkspace\SeachEngine\text\1.txt
1   ---->   D:\IdeaWorkspace\SeachEngine\text\2.txt
2   ---->   D:\IdeaWorkspace\SeachEngine\text\3.txt

Postings:
activity   ---->   {docId: 0, freq: 3, positions: [0, 1, 6]} {docId: 1, freq: 1, positions: [0]} 
benefits   ---->   {docId: 0, freq: 2, positions: [2, 7]} {docId: 1, freq: 1, positions: [10]} 
capital   ---->   {docId: 0, freq: 2, positions: [3, 8]} {docId: 1, freq: 1, positions: [7]} 
destination   ---->   {docId: 0, freq: 2, positions: [4, 9]} {docId: 1, freq: 1, positions: [1]} 
emergency   ---->   {docId: 0, freq: 1, positions: [10]} {docId: 1, freq: 1, positions: [2]} 
fizzy   ---->   {docId: 0, freq: 1, positions: [5]} 
frozen   ---->   {docId: 1, freq: 2, positions: [9, 14]} 
google   ---->   {docId: 1, freq: 2, positions: [11, 15]} 
marketplace   ---->   {docId: 2, freq: 1, positions: [0]} 
medical   ---->   {docId: 2, freq: 1, positions: [1]} 
notification   ---->   {docId: 2, freq: 1, positions: [3]} 
peninsula   ---->   {docId: 2, freq: 1, positions: [5]} 
pollution   ---->   {docId: 2, freq: 1, positions: [7]} 
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[/C:/Users/yjj/Desktop/Experiment1Test(JDK17)/Experiment1Test(JDK17)/test/config/..//index/index_1_2_3_txt.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWriteObject -->
        <test-method signature="testReadObject(hust.cs.javacourse.search.index.AbstractIndex, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@76b10754]" started-at="2024-06-07T14:59:02Z" name="testReadObject" data-provider="testIndex" finished-at="2024-06-07T14:59:02Z" duration-ms="10" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId----docPath mapping:
0   ---->   D:\IdeaWorkspace\SeachEngine\text\1.txt
1   ---->   D:\IdeaWorkspace\SeachEngine\text\2.txt
2   ---->   D:\IdeaWorkspace\SeachEngine\text\3.txt

Postings:
activity   ---->   {docId: 0, freq: 3, positions: [0, 1, 6]} {docId: 1, freq: 1, positions: [0]} 
benefits   ---->   {docId: 0, freq: 2, positions: [2, 7]} {docId: 1, freq: 1, positions: [10]} 
capital   ---->   {docId: 0, freq: 2, positions: [3, 8]} {docId: 1, freq: 1, positions: [7]} 
destination   ---->   {docId: 0, freq: 2, positions: [4, 9]} {docId: 1, freq: 1, positions: [1]} 
emergency   ---->   {docId: 0, freq: 1, positions: [10]} {docId: 1, freq: 1, positions: [2]} 
fizzy   ---->   {docId: 0, freq: 1, positions: [5]} 
frozen   ---->   {docId: 1, freq: 2, positions: [9, 14]} 
google   ---->   {docId: 1, freq: 2, positions: [11, 15]} 
marketplace   ---->   {docId: 2, freq: 1, positions: [0]} 
medical   ---->   {docId: 2, freq: 1, positions: [1]} 
notification   ---->   {docId: 2, freq: 1, positions: [3]} 
peninsula   ---->   {docId: 2, freq: 1, positions: [5]} 
pollution   ---->   {docId: 2, freq: 1, positions: [7]} 
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[/C:/Users/yjj/Desktop/Experiment1Test(JDK17)/Experiment1Test(JDK17)/test/config/..//index/index_1_2_3_txt.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadObject -->
        <test-method signature="testOptimize(hust.cs.javacourse.search.index.AbstractIndex, hust.cs.javacourse.search.index.AbstractIndex)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@76b10754]" started-at="2024-06-07T14:59:02Z" name="testOptimize" data-provider="testIndex" finished-at="2024-06-07T14:59:02Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId----docPath mapping:
0   ---->   D:\IdeaWorkspace\SeachEngine\text\1.txt
1   ---->   D:\IdeaWorkspace\SeachEngine\text\2.txt
2   ---->   D:\IdeaWorkspace\SeachEngine\text\3.txt

Postings:
activity   ---->   {docId: 0, freq: 3, positions: [0, 1, 6]} {docId: 1, freq: 1, positions: [0]} 
benefits   ---->   {docId: 0, freq: 2, positions: [2, 7]} {docId: 1, freq: 1, positions: [10]} 
capital   ---->   {docId: 0, freq: 2, positions: [3, 8]} {docId: 1, freq: 1, positions: [7]} 
destination   ---->   {docId: 0, freq: 2, positions: [4, 9]} {docId: 1, freq: 1, positions: [1]} 
emergency   ---->   {docId: 0, freq: 1, positions: [10]} {docId: 1, freq: 1, positions: [2]} 
fizzy   ---->   {docId: 0, freq: 1, positions: [5]} 
frozen   ---->   {docId: 1, freq: 2, positions: [9, 14]} 
google   ---->   {docId: 1, freq: 2, positions: [11, 15]} 
marketplace   ---->   {docId: 2, freq: 1, positions: [0]} 
medical   ---->   {docId: 2, freq: 1, positions: [1]} 
notification   ---->   {docId: 2, freq: 1, positions: [3]} 
peninsula   ---->   {docId: 2, freq: 1, positions: [5]} 
pollution   ---->   {docId: 2, freq: 1, positions: [7]} 
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[docId----docPath mapping:
0   ---->   D:\IdeaWorkspace\SeachEngine\text\1.txt
1   ---->   D:\IdeaWorkspace\SeachEngine\text\2.txt
2   ---->   D:\IdeaWorkspace\SeachEngine\text\3.txt

Postings:
activity   ---->   {docId: 0, freq: 3, positions: [0, 1, 6]} {docId: 1, freq: 1, positions: [0]} 
benefits   ---->   {docId: 0, freq: 2, positions: [2, 7]} {docId: 1, freq: 1, positions: [10]} 
capital   ---->   {docId: 0, freq: 2, positions: [3, 8]} {docId: 1, freq: 1, positions: [7]} 
destination   ---->   {docId: 0, freq: 2, positions: [4, 9]} {docId: 1, freq: 1, positions: [1]} 
emergency   ---->   {docId: 0, freq: 1, positions: [10]} {docId: 1, freq: 1, positions: [2]} 
fizzy   ---->   {docId: 0, freq: 1, positions: [5]} 
frozen   ---->   {docId: 1, freq: 2, positions: [9, 14]} 
google   ---->   {docId: 1, freq: 2, positions: [11, 15]} 
marketplace   ---->   {docId: 2, freq: 1, positions: [0]} 
medical   ---->   {docId: 2, freq: 1, positions: [1]} 
notification   ---->   {docId: 2, freq: 1, positions: [3]} 
peninsula   ---->   {docId: 2, freq: 1, positions: [5]} 
pollution   ---->   {docId: 2, freq: 1, positions: [7]} 
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOptimize -->
        <test-method signature="testGetDocName(hust.cs.javacourse.search.index.AbstractIndex, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@76b10754]" started-at="2024-06-07T14:59:02Z" name="testGetDocName" data-provider="testIndex" finished-at="2024-06-07T14:59:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId----docPath mapping:
0   ---->   D:\IdeaWorkspace\SeachEngine\text\1.txt
1   ---->   D:\IdeaWorkspace\SeachEngine\text\2.txt
2   ---->   D:\IdeaWorkspace\SeachEngine\text\3.txt

Postings:
activity   ---->   {docId: 0, freq: 3, positions: [0, 1, 6]} {docId: 1, freq: 1, positions: [0]} 
benefits   ---->   {docId: 0, freq: 2, positions: [2, 7]} {docId: 1, freq: 1, positions: [10]} 
capital   ---->   {docId: 0, freq: 2, positions: [3, 8]} {docId: 1, freq: 1, positions: [7]} 
destination   ---->   {docId: 0, freq: 2, positions: [4, 9]} {docId: 1, freq: 1, positions: [1]} 
emergency   ---->   {docId: 0, freq: 1, positions: [10]} {docId: 1, freq: 1, positions: [2]} 
fizzy   ---->   {docId: 0, freq: 1, positions: [5]} 
frozen   ---->   {docId: 1, freq: 2, positions: [9, 14]} 
google   ---->   {docId: 1, freq: 2, positions: [11, 15]} 
marketplace   ---->   {docId: 2, freq: 1, positions: [0]} 
medical   ---->   {docId: 2, freq: 1, positions: [1]} 
notification   ---->   {docId: 2, freq: 1, positions: [3]} 
peninsula   ---->   {docId: 2, freq: 1, positions: [5]} 
pollution   ---->   {docId: 2, freq: 1, positions: [7]} 
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@7b84fcf8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocName -->
      </class> <!-- hust.cs.javacourse.search.index.IndexTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/IndexTest.java -->
    <test started-at="2024-06-07T14:59:02Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/IndexBuilderTest.java" finished-at="2024-06-07T14:59:02Z" duration-ms="44">
      <class name="hust.cs.javacourse.search.index.IndexBuilderTest">
        <test-method signature="testBuildIndex(hust.cs.javacourse.search.index.AbstractIndex, hust.cs.javacourse.search.index.AbstractIndex)[pri:0, instance:hust.cs.javacourse.search.index.IndexBuilderTest@74294adb]" started-at="2024-06-07T14:59:02Z" name="testBuildIndex" data-provider="testIndexBuilder" finished-at="2024-06-07T14:59:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId----docPath mapping:
0   ---->   C:\Users\yjj\Desktop\Experiment1Test(JDK17)\Experiment1Test(JDK17)\test\text\1.txt
1   ---->   C:\Users\yjj\Desktop\Experiment1Test(JDK17)\Experiment1Test(JDK17)\test\text\2.txt
2   ---->   C:\Users\yjj\Desktop\Experiment1Test(JDK17)\Experiment1Test(JDK17)\test\text\3.txt

Postings:
activity   ---->   {docId: 0, freq: 3, positions: [0, 1, 6]} {docId: 1, freq: 1, positions: [0]} 
benefits   ---->   {docId: 0, freq: 2, positions: [2, 7]} {docId: 1, freq: 1, positions: [10]} 
capital   ---->   {docId: 0, freq: 2, positions: [3, 8]} {docId: 1, freq: 1, positions: [7]} 
destination   ---->   {docId: 0, freq: 2, positions: [4, 9]} {docId: 1, freq: 1, positions: [1]} 
emergency   ---->   {docId: 0, freq: 1, positions: [10]} {docId: 1, freq: 1, positions: [2]} 
fizzy   ---->   {docId: 0, freq: 1, positions: [5]} 
frozen   ---->   {docId: 1, freq: 2, positions: [9, 14]} 
google   ---->   {docId: 1, freq: 2, positions: [11, 15]} 
marketplace   ---->   {docId: 2, freq: 1, positions: [0]} 
medical   ---->   {docId: 2, freq: 1, positions: [1]} 
notification   ---->   {docId: 2, freq: 1, positions: [3]} 
peninsula   ---->   {docId: 2, freq: 1, positions: [5]} 
pollution   ---->   {docId: 2, freq: 1, positions: [7]} 
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[docId----docPath mapping:
0   ---->   D:\IdeaWorkspace\SeachEngine\text\1.txt
1   ---->   D:\IdeaWorkspace\SeachEngine\text\2.txt
2   ---->   D:\IdeaWorkspace\SeachEngine\text\3.txt

Postings:
activity   ---->   {docId: 0, freq: 3, positions: [0, 1, 6]} {docId: 1, freq: 1, positions: [0]} 
benefits   ---->   {docId: 0, freq: 2, positions: [2, 7]} {docId: 1, freq: 1, positions: [10]} 
capital   ---->   {docId: 0, freq: 2, positions: [3, 8]} {docId: 1, freq: 1, positions: [7]} 
destination   ---->   {docId: 0, freq: 2, positions: [4, 9]} {docId: 1, freq: 1, positions: [1]} 
emergency   ---->   {docId: 0, freq: 1, positions: [10]} {docId: 1, freq: 1, positions: [2]} 
fizzy   ---->   {docId: 0, freq: 1, positions: [5]} 
frozen   ---->   {docId: 1, freq: 2, positions: [9, 14]} 
google   ---->   {docId: 1, freq: 2, positions: [11, 15]} 
marketplace   ---->   {docId: 2, freq: 1, positions: [0]} 
medical   ---->   {docId: 2, freq: 1, positions: [1]} 
notification   ---->   {docId: 2, freq: 1, positions: [3]} 
peninsula   ---->   {docId: 2, freq: 1, positions: [5]} 
pollution   ---->   {docId: 2, freq: 1, positions: [7]} 
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuildIndex -->
      </class> <!-- hust.cs.javacourse.search.index.IndexBuilderTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/IndexBuilderTest.java -->
    <test started-at="2024-06-07T14:59:02Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/query/HitTest.java" finished-at="2024-06-07T14:59:02Z" duration-ms="64">
      <class name="hust.cs.javacourse.search.query.HitTest">
        <test-method signature="testGetDocId(hust.cs.javacourse.search.query.AbstractHit, int)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@46238e3f]" started-at="2024-06-07T14:59:02Z" name="testGetDocId" data-provider="testHit" finished-at="2024-06-07T14:59:02Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId: 0, docPath: D:\IdeaWorkspace\SeachEngine\text\1.txt, score: -3.0
content: 
activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism
Term----posting mapping: 
activity  ---->  {docId: 0, freq: 3, positions: [0, 1, 6]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocId -->
        <test-method signature="testGetDocId(hust.cs.javacourse.search.query.AbstractHit, int)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@46238e3f]" started-at="2024-06-07T14:59:02Z" name="testGetDocId" data-provider="testHit" finished-at="2024-06-07T14:59:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId: 1, docPath: D:\IdeaWorkspace\SeachEngine\text\2.txt, score: -1.0
content: 
activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google
Term----posting mapping: 
activity  ---->  {docId: 1, freq: 1, positions: [0]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocId -->
        <test-method signature="testGetDocPath(hust.cs.javacourse.search.query.AbstractHit, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@46238e3f]" started-at="2024-06-07T14:59:02Z" name="testGetDocPath" data-provider="testHit" finished-at="2024-06-07T14:59:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId: 1, docPath: D:\IdeaWorkspace\SeachEngine\text\2.txt, score: -1.0
content: 
activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google
Term----posting mapping: 
activity  ---->  {docId: 1, freq: 1, positions: [0]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[D:\IdeaWorkspace\SeachEngine\text\2.txt]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocPath -->
        <test-method signature="testGetDocPath(hust.cs.javacourse.search.query.AbstractHit, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@46238e3f]" started-at="2024-06-07T14:59:02Z" name="testGetDocPath" data-provider="testHit" finished-at="2024-06-07T14:59:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId: 0, docPath: D:\IdeaWorkspace\SeachEngine\text\1.txt, score: -3.0
content: 
activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism
Term----posting mapping: 
activity  ---->  {docId: 0, freq: 3, positions: [0, 1, 6]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[D:\IdeaWorkspace\SeachEngine\text\1.txt]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocPath -->
        <test-method signature="testGetContent(hust.cs.javacourse.search.query.AbstractHit, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@46238e3f]" started-at="2024-06-07T14:59:02Z" name="testGetContent" data-provider="testHit" finished-at="2024-06-07T14:59:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId: 1, docPath: D:\IdeaWorkspace\SeachEngine\text\2.txt, score: -1.0
content: 
activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google
Term----posting mapping: 
activity  ---->  {docId: 1, freq: 1, positions: [0]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetContent -->
        <test-method signature="testGetContent(hust.cs.javacourse.search.query.AbstractHit, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@46238e3f]" started-at="2024-06-07T14:59:02Z" name="testGetContent" data-provider="testHit" finished-at="2024-06-07T14:59:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId: 0, docPath: D:\IdeaWorkspace\SeachEngine\text\1.txt, score: -3.0
content: 
activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism
Term----posting mapping: 
activity  ---->  {docId: 0, freq: 3, positions: [0, 1, 6]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetContent -->
        <test-method signature="testSetContent(hust.cs.javacourse.search.query.AbstractHit, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@46238e3f]" started-at="2024-06-07T14:59:02Z" name="testSetContent" data-provider="testHit" finished-at="2024-06-07T14:59:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId: 0, docPath: D:\IdeaWorkspace\SeachEngine\text\1.txt, score: -3.0
content: 
new content1
Term----posting mapping: 
activity  ---->  {docId: 0, freq: 3, positions: [0, 1, 6]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[new content1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetContent -->
        <test-method signature="testSetContent(hust.cs.javacourse.search.query.AbstractHit, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@46238e3f]" started-at="2024-06-07T14:59:02Z" name="testSetContent" data-provider="testHit" finished-at="2024-06-07T14:59:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId: 1, docPath: D:\IdeaWorkspace\SeachEngine\text\2.txt, score: -1.0
content: 
new content2
Term----posting mapping: 
activity  ---->  {docId: 1, freq: 1, positions: [0]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[new content2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetContent -->
        <test-method signature="testGetScore(hust.cs.javacourse.search.query.AbstractHit, double)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@46238e3f]" started-at="2024-06-07T14:59:02Z" name="testGetScore" data-provider="testHit" finished-at="2024-06-07T14:59:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId: 0, docPath: D:\IdeaWorkspace\SeachEngine\text\1.txt, score: -3.0
content: 
activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism
Term----posting mapping: 
activity  ---->  {docId: 0, freq: 3, positions: [0, 1, 6]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-3.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetScore -->
        <test-method signature="testGetScore(hust.cs.javacourse.search.query.AbstractHit, double)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@46238e3f]" started-at="2024-06-07T14:59:02Z" name="testGetScore" data-provider="testHit" finished-at="2024-06-07T14:59:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId: 1, docPath: D:\IdeaWorkspace\SeachEngine\text\2.txt, score: -1.0
content: 
activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google
Term----posting mapping: 
activity  ---->  {docId: 1, freq: 1, positions: [0]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-1.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetScore -->
        <test-method signature="testSetScore(hust.cs.javacourse.search.query.AbstractHit, double)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@46238e3f]" started-at="2024-06-07T14:59:02Z" name="testSetScore" data-provider="testHit" finished-at="2024-06-07T14:59:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId: 1, docPath: D:\IdeaWorkspace\SeachEngine\text\2.txt, score: 1.0
content: 
activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google
Term----posting mapping: 
activity  ---->  {docId: 1, freq: 1, positions: [0]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetScore -->
        <test-method signature="testSetScore(hust.cs.javacourse.search.query.AbstractHit, double)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@46238e3f]" started-at="2024-06-07T14:59:02Z" name="testSetScore" data-provider="testHit" finished-at="2024-06-07T14:59:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId: 0, docPath: D:\IdeaWorkspace\SeachEngine\text\1.txt, score: 3.0
content: 
activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism
Term----posting mapping: 
activity  ---->  {docId: 0, freq: 3, positions: [0, 1, 6]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetScore -->
        <test-method signature="testGetTermPostingMapping(hust.cs.javacourse.search.query.AbstractHit, int)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@46238e3f]" started-at="2024-06-07T14:59:02Z" name="testGetTermPostingMapping" data-provider="testHit" finished-at="2024-06-07T14:59:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId: 0, docPath: D:\IdeaWorkspace\SeachEngine\text\1.txt, score: -3.0
content: 
activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism
Term----posting mapping: 
activity  ---->  {docId: 0, freq: 3, positions: [0, 1, 6]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTermPostingMapping -->
        <test-method signature="testGetTermPostingMapping(hust.cs.javacourse.search.query.AbstractHit, int)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@46238e3f]" started-at="2024-06-07T14:59:02Z" name="testGetTermPostingMapping" data-provider="testHit" finished-at="2024-06-07T14:59:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId: 1, docPath: D:\IdeaWorkspace\SeachEngine\text\2.txt, score: -1.0
content: 
activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google
Term----posting mapping: 
activity  ---->  {docId: 1, freq: 1, positions: [0]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTermPostingMapping -->
        <test-method signature="testTestToString(hust.cs.javacourse.search.query.AbstractHit, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@46238e3f]" started-at="2024-06-07T14:59:02Z" name="testTestToString" data-provider="testHit" finished-at="2024-06-07T14:59:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId: 0, docPath: D:\IdeaWorkspace\SeachEngine\text\1.txt, score: -3.0
content: 
activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism
Term----posting mapping: 
activity  ---->  {docId: 0, freq: 3, positions: [0, 1, 6]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@acdb094]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
        <test-method signature="testCompareTo([Lhust.cs.javacourse.search.query.AbstractHit;, int)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@46238e3f]" started-at="2024-06-07T14:59:02Z" name="testCompareTo" data-provider="testHit" finished-at="2024-06-07T14:59:02Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@57ea113a]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCompareTo -->
      </class> <!-- hust.cs.javacourse.search.query.HitTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/query/HitTest.java -->
    <test started-at="2024-06-07T14:59:02Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/query/IndexSearcherTest.java" finished-at="2024-06-07T14:59:02Z" duration-ms="94">
      <class name="hust.cs.javacourse.search.index.PostingListTest">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@4fcd19b3]" started-at="2024-06-07T14:59:00Z" name="beforeSuite" finished-at="2024-06-07T14:59:00Z" duration-ms="37" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
      </class> <!-- hust.cs.javacourse.search.index.PostingListTest -->
      <class name="hust.cs.javacourse.search.query.IndexSearcherTest">
        <test-method signature="testSearch([Lhust.cs.javacourse.search.query.AbstractHit;, [Lhust.cs.javacourse.search.query.AbstractHit;)[pri:0, instance:hust.cs.javacourse.search.query.IndexSearcherTest@6cc7b4de]" started-at="2024-06-07T14:59:02Z" name="testSearch" data-provider="testIndexSearcher" finished-at="2024-06-07T14:59:02Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@75390459]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@7756c3cd]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearch -->
        <test-method signature="testSearch([Lhust.cs.javacourse.search.query.AbstractHit;, [Lhust.cs.javacourse.search.query.AbstractHit;)[pri:0, instance:hust.cs.javacourse.search.query.IndexSearcherTest@6cc7b4de]" started-at="2024-06-07T14:59:02Z" name="testSearch" data-provider="testIndexSearcher" finished-at="2024-06-07T14:59:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@2313052e]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@2bd2b28e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearch -->
        <test-method signature="testTestSearch([Lhust.cs.javacourse.search.query.AbstractHit;, [Lhust.cs.javacourse.search.query.AbstractHit;)[pri:0, instance:hust.cs.javacourse.search.query.IndexSearcherTest@6cc7b4de]" started-at="2024-06-07T14:59:02Z" name="testTestSearch" data-provider="testIndexSearcher" finished-at="2024-06-07T14:59:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@16746061]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@57fd91c9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestSearch -->
      </class> <!-- hust.cs.javacourse.search.query.IndexSearcherTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/query/IndexSearcherTest.java -->
  </suite> <!-- All Test Suite -->
</testng-results>
